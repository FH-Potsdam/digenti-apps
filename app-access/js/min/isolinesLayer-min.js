function isolinesLayer(){function t(t,a){var s=t.geometry.coordinates,i=s[1]+","+s[0],r=app.config.apiBase+"/isoline/"+i+"/"+e.queryRanges,o=function(i){e.isolinesQueried++;for(var r=0;r<i.features.length;r++){var o=i.features[r],n=o.properties.range,l={type:"Feature",properties:{},geometry:{type:"Point",coordinates:s}},p=turf.buffer(o,2e3,"meters");if(turf.inside(l,p)){o.properties.osm_id=t.properties.osm_id,o.properties.name=t.properties.name,e.isolinesGeoJSON.features.push(o);var c=e.svglayer.select('g[data-id="'+a+'"]');c.append("path").data([o]).classed("isoline",!0).classed("disabled",function(){return n!=e.range}).attr("data-range",n).attr("data-id",a)}}};$.ajax({dataType:"json",url:r,success:o,error:function(t){alert(t)}})}var e=this;this.isolinesQueried=0,this.scaleFactor=0,this.lastView="",this.isolinesGeoJSON={type:"FeatureCollection",features:[]},this.queryRanges="30",this.range=0,this.isolinesQueried=0,this.setQueryRanges=function(t){this.queryRanges=t},this.setRange=function(t){this.range=t},this.toggleIsolines=function(){this.svglayer.selectAll(".isoline-group path.isoline").classed("disabled",function(){var t=d3.select(this);return t.attr("data-range")!=e.range})},this.hasIsolines=function(t){for(var e=0;e<this.isolinesGeoJSON.features.length;e++)if(this.isolinesGeoJSON.features[e].properties.osm_id==t)return!0;return!1},this.init=function(e,a){this.svglayer=e.append("g").attr("id","isolines"),this.svglayer.selectAll("g").data(a.features).enter().append("g").attr("data-id",function(t){return t.properties.osm_id}).attr("class","isoline-group").each(function(e){t(e,e.properties.osm_id),app.config.layoutdebug===!0&&d3.select(this).append("rect").attr("class","layoutdebug")})},this.calc=function(){if(isDefined(this.svglayer)&&"smallmultiples"===app.view){var t=0,a=0,s=0,i=0;this.svglayer.selectAll(".isoline-group-vis").each(function(){var t=d3.select(this),e=t.node().getBBox().width,a=t.node().getBBox().height;a>i&&(i=a),e>s&&(s=e)});var r=app.layout.heightperelement/i,o=app.layout.widthperelement/s;e.scaleFactor=r,o<e.scaleFactor&&(e.scaleFactor=o),this.svglayer.selectAll(".isoline-group").each(function(s){var i=d3.select(this),r=s.geometry.coordinates;app.config.layoutdebug===!0&&i.selectAll(".layoutdebug").attr("width",app.layout.widthperelement).attr("height",app.layout.heightperelement);var o=app.layout.offsetLeft+t*(app.layout.gapX+app.layout.widthperelement);t++,t===app.layout.cols&&(t=0);var n=app.layout.offsetTop+a*(app.layout.gapY+app.layout.heightperelement);a++,a===app.layout.rows&&(a=0),i.attr("data-transformX",o).attr("data-transformY",n),i.selectAll(".isoline-group-vis").each(function(){var t=d3.select(this),a=d3.select(this).node().getBBox(),s=(-a.x+app.layout.widthperelement/e.scaleFactor/2-a.width/2)*e.scaleFactor,i=(-a.y+app.layout.heightperelement/e.scaleFactor/2-a.height/2)*e.scaleFactor;t.attr("data-transformX",s).attr("data-transformY",i)})})}},this.update=function(t){this.calc(),this.render(t)},this.render=function(t){var a=d3.geo.transform({point:projectPoint}),s=d3.geo.path().projection(a);isDefined(this.svglayer)&&("smallmultiples"===app.view?e.lastView!==app.view&&(this.svglayer.selectAll(".isoline-group").transition().duration(t).attr("transform",function(){return"translate("+d3.select(this).attr("data-transformX")+","+d3.select(this).attr("data-transformY")+")"}),this.svglayer.selectAll(".isoline-group-vis").transition().duration(t).attr("transform",function(){return"translate("+d3.select(this).attr("data-transformX")+","+d3.select(this).attr("data-transformY")+") scale("+e.scaleFactor+")"})):e.lastView!==app.view&&(this.svglayer.selectAll(".isoline-group").transition().duration(t).attr("transform",""),this.svglayer.selectAll(".isoline-group-vis").transition().duration(t).attr("transform","")),this.svglayer.selectAll(".isoline").attr("d",s)),e.lastView=app.view}}
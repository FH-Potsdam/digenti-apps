function isolinesLayer(){function t(t,a){var i=t.geometry.coordinates,s=i[1]+","+i[0],r=30,o=app.config.apiBase+"/isoline/"+s+"/"+r,l=function(s){this.isolinesQueried++;var r=s,o={type:"Feature",properties:{"marker-color":"#f00"},geometry:{type:"Point",coordinates:i}},l=turf.buffer(r,2e3,"meters");if(turf.inside(o,l.features[0])){r.properties.osm_id=t.properties.osm_id,r.properties.name=t.properties.name,e.isolinesGeoJSON.features.push(r);var n=e.svglayer.select('g[data-id="'+a+'"]').select(".isoline-group-vis");n.append("path").data([r]).attr("class","isoline").attr("data-id",a)}this.isolinesQueried===places_aoi.features.length&&(this.update(app.config.transitionTime),console.log("FERTIG"))};$.ajax({dataType:"json",url:o,success:l,error:function(t){alert(t)}})}var e=this;this.isolineColor="#3dc8e7",this.isolineOpacity=.35,this.isolinesQueried=0,this.active=!0,this.scaleFactor=0,this.isolinesGeoJSON={type:"FeatureCollection",crs:{type:"name",properties:{name:"urn:ogc:def:crs:OGC:1.3:CRS84"}},features:[]},this.setActive=function(t){null===t?this.active=!this.active:this.active=t,this.svglayer.classed("disabled",!this.active)},this.init=function(e,a){this.svglayer=e.append("g").attr("id","isolines"),this.setActive(!1),this.svglayer.selectAll("g").data(a.features).enter().append("g").attr("data-id",function(t){return t.properties.osm_id}).attr("class","isoline-group").each(function(){app.config.layoutdebug===!0&&d3.select(this).append("rect").attr("class","layoutdebug")}).append("g").attr("class","isoline-group-vis").each(function(e){t(e,e.properties.osm_id)})},this.calc=function(){if(isDefined(this.svglayer))if("smallmultiples"===app.view){var t=0,a=0,i=0,s=0;this.svglayer.selectAll(".isoline-group-vis").each(function(){var t=d3.select(this),e=t.node().getBBox().width,a=t.node().getBBox().height;a>s&&(s=a),e>i&&(i=e)});var r=app.layout.heightperelement/s,o=app.layout.widthperelement/i;e.scaleFactor=r,o<e.scaleFactor&&(e.scaleFactor=o),this.svglayer.selectAll(".isoline-group").each(function(i){var s=d3.select(this),r=i.geometry.coordinates;app.config.layoutdebug===!0&&s.selectAll(".layoutdebug").attr("width",app.layout.widthperelement).attr("height",app.layout.heightperelement);var o=app.layout.offsetLeft+t*(app.layout.gapX+app.layout.widthperelement);t++,t===app.layout.cols&&(t=0);var l=app.layout.offsetTop+a*(app.layout.gapY+app.layout.heightperelement);a++,a===app.layout.rows&&(a=0),s.attr("data-transformX",o).attr("data-transformY",l),s.selectAll(".isoline-group-vis").each(function(){var t=d3.select(this),a=d3.select(this).node().getBBox(),i=(-a.x+app.layout.widthperelement/e.scaleFactor/2-a.width/2)*e.scaleFactor,n=(-a.y+app.layout.heightperelement/e.scaleFactor/2-a.height/2)*e.scaleFactor;t.attr("data-transformX",i).attr("data-transformY",n);var p,c;0===a.width&&0===a.height?(p=i+o,c=n+l):(p=parseFloat(project(r).x*e.scaleFactor)+i+o,c=parseFloat(project(r).y*e.scaleFactor)+n+l),e.active&&(app.villagePositions[s.attr("data-id")]={},app.villagePositions[s.attr("data-id")].x=p,app.villagePositions[s.attr("data-id")].y=c)})})}else e.active&&(app.villagePositions=app.villagePositionsMap.slice())},this.update=function(t){this.calc(),updateSettlementPointLayer(t),this.render(t)},this.render=function(t){var a=d3.geo.transform({point:projectPoint}),i=d3.geo.path().projection(a);isDefined(this.svglayer)&&("smallmultiples"===app.view?(this.svglayer.selectAll(".isoline-group").transition().duration(t).style("opacity",1).attr("transform",function(){return"translate("+d3.select(this).attr("data-transformX")+","+d3.select(this).attr("data-transformY")+")"}),this.svglayer.selectAll(".isoline-group-vis").transition().duration(t).style("opacity",1).attr("transform",function(){return"translate("+d3.select(this).attr("data-transformX")+","+d3.select(this).attr("data-transformY")+") scale("+e.scaleFactor+")"}),this.svglayer.selectAll(".isoline").attr("d",i)):(this.svglayer.selectAll(".isoline-group").transition().duration(t).style("opacity",1).attr("transform",function(){return""}),this.svglayer.selectAll(".isoline-group-vis").transition().duration(t).attr("transform",function(){return""}),this.svglayer.selectAll(".isoline").attr("d",i)))}}
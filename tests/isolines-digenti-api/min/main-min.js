function showValue(){var t=$("#range__slider").val();document.getElementById("range").innerHTML=t+" minutes"}function isolineAll(){$(".village").each(function(t){console.log("asdasd"),$(this).d3Click()})}function mapDraw(t){function e(){l.addSource("colombia-fos",{type:"vector",url:"mapbox://jorditost.49a7b9e1"}),l.addLayer({id:"fos3",type:"line",source:"colombia-fos","source-layer":"colombia_fos_h1_m0_5_CLASSIFIED_wgs84",filter:["==","elev",3],layout:{"line-join":"round","line-cap":"round"},paint:{"line-color":"#e6dc51","line-width":2,"line-opacity":.3}}),l.addLayer({id:"fos2",type:"line",source:"colombia-fos","source-layer":"colombia_fos_h1_m0_5_CLASSIFIED_wgs84",filter:["==","elev",2],layout:{"line-join":"round","line-cap":"round"},paint:{"line-color":"#d9943f","line-width":2,"line-opacity":.3}}),l.addLayer({id:"fos1",type:"line",source:"colombia-fos","source-layer":"colombia_fos_h1_m0_5_CLASSIFIED_wgs84",filter:["==","elev",1],layout:{"line-join":"round","line-cap":"round"},paint:{"line-color":"#c74d4d","line-width":2,"line-opacity":.3}})}function o(t,e){var o=t.geometry.coordinates;console.log(t),routing_history.push(o[1]+","+o[0]),"routing"===currentMode&&routing_history.length>1&&r(o),"isoline"===currentMode&&n(o,e)}function n(t,e){var o=t[1]+","+t[0],n=parseInt($("#range__slider").val()),r="http://localhost:61002/api/isoline/"+o+"/"+n,a=function(o){var n=o;console.log(JSON.stringify(o)),n.properties.objectID=e;var r={type:"Feature",properties:{"marker-color":"#f00"},geometry:{type:"Point",coordinates:t}},a=turf.buffer(n,500,"meters"),i=turf.inside(r,a.features[0]);if(i){var s=concaveman(n.geometry.coordinates[0],6),c=turf.polygon([s]);console.log(JSON.stringify(c)),l.addSource(e+"_concave",{type:"geojson",data:c}),l.addLayer({id:"isoline_"+e+"_concave",type:"fill",source:e+"_concave",layout:{},paint:{"fill-color":"#ffed00","fill-opacity":.1}}),l.addSource(e,{type:"geojson",data:n}),l.addLayer({id:"isoline_"+e,type:"fill",source:e,layout:{},paint:{"fill-color":"#088","fill-opacity":.2}})}};$.ajax({dataType:"json",url:r,success:a,error:function(t){alert(t)}})}function r(t){function e(t){console.log(t)}function o(t){var e=t.response,o={init:function(){return this.id=generateUniqueID(),this.geometry=transformHEREgeometry(e.route[0].shape),this.travelTime=e.route[0].summary.travelTime,this.path=lineFunction(this.geometry),this}}.init();routes_collection.push(o);var n=gRoutes.append("path").attr("class","route").attr("d",o.path).attr("stroke-width",2);routes_paths.push(n),compareRouteWithCollection(o,routes_collection),setTimeout(function(){var t=d.append("path").attr("class","distance").attr("d",o.path).attr("stroke-width",4),e=morphpath.linify(o.path,0,10,.85*window.innerHeight+10+lines_paths.length*linePadding);t.transition().duration(2e3).attr("d",e);var n=d.append("path").attr("class","time").attr("d",o.path).attr("stroke-width",4),r=morphpath.linify(o.path,0,10,.85*window.innerHeight+10+lines_paths.length*linePadding,parseInt(o.travelTime));n.transition().duration(2e3).attr("transform","translate(0,5)").attr("d",r),lines_paths.push(e)},1e3),a()}var n={mode:"fastest;car",representation:"display",routeattributes:"waypoints,summary,shape,legs",maneuverattributes:"direction,action",waypoint0:routing_history[routing_history.length-2],waypoint1:routing_history[routing_history.length-1],returnelevation:"true"};router.calculateRoute(n,o,e)}function a(){for(var t=0;t<routes_paths.length;t++)routes_paths[t].attr("d",lineFunction(pathData));for(var t=0;t<routes_points.length;t++)routes_points[t].attr({cx:function(t){return i(t).x},cy:function(t){return i(t).y}});for(var t=0;t<routes_foot_paths.length;t++)routes_foot_paths[t].attr("d",lineFunction(pathFootData));for(var t=0;t<routes_foot_points.length;t++)routes_foot_points[t].attr({cx:function(t){return i(t).x},cy:function(t){return i(t).y}});f.attr({cx:function(t){return i(t.geometry.coordinates).x},cy:function(t){return i(t.geometry.coordinates).y}}),console.log("UPDATE");for(var e=0;e<isolines_collection.length;e++)"undefined"!=typeof isolines_collection[e]&&isolines_collection[e].attr("points",function(t){for(var e=[],o=0;o<t.length;o++)e.push([i(t[o]).x,i(t[o]).y].join(","));return e.join(" ")})}function i(t){return l.project(new mapboxgl.LngLat(+t[0],+t[1]))}function s(t){"DIGENTI"==t?l.setStyle("mapbox://styles/jorditost/cipseaugm001ycunimvr00zea"):"DIGENTI-Light"==t?l.setStyle("mapbox://styles/jorditost/ciqc61l3p0023dunqn9e5t4zi"):"fos-outdoor"==t?l.setStyle("mapbox://styles/jorditost/cip44ooh90013cjnkmwmwd2ft"):l.setStyle("mapbox://styles/mapbox/"+t),l.on("load",function(){e()})}mapboxgl.accessToken="pk.eyJ1Ijoiam9yZGl0b3N0IiwiYSI6ImQtcVkyclEifQ.vwKrOGZoZSj3N-9MB6FF_A";var l=new mapboxgl.Map({container:"map",style:"mapbox://styles/jorditost/ciqc61l3p0023dunqn9e5t4zi",zoom:11,center:[-73.02,10.41]});l.addControl(new mapboxgl.Navigation),l.on("load",function(){});var c=l.getCanvasContainer(),u=d3.select(c).append("svg").attr("class","map-morphed"),p=d3.select(c).append("svg").attr("class","map-features");gRoutes=p.append("g").attr("class","routes");var d=u.append("g").attr("class","route-lines");isolinesGroup=p.append("g").attr("class","isolinesGroup");var f=p.append("g").attr("class","villages").selectAll("circle").data(t.features).enter().append("circle").attr({r:5}).attr("class","village").attr("data-id",function(){return generateUniqueID()}).on("click",function(t){d3.select(this).classed("selected",!0);var e=d3.select(this).attr("data-id");o(t,e)});lineFunction=d3.svg.line().x(function(t){return i(t).x}).y(function(t){return i(t).y}).interpolate("linear"),l.on("viewreset",a),l.on("movestart",function(){}),l.on("moveend",function(){a()}),a();var h=document.getElementById("basemap_select"),g=h.options;h.onchange=function(){var t=g[h.selectedIndex].value;s(t)}}function getRandomInt(t,e){return Math.floor(Math.random()*(e-t))+t}function generateUniqueID(){return"id"+(new Date).getTime().toString()+Math.random().toString(36).substr(2,16)}function transformHEREgeometry(t){for(var e=0;e<t.length;e++){t[e]=t[e].split(",");for(var o=0;o<t[e].length;o++)t[e][o]=parseFloat(t[e][o]);var n=t[e][0];t[e][0]=t[e][1],t[e][1]=n}return t}function getOverlappingGeometry(t,e){for(var o=[],n=0;n<t.length;n++)for(var r=0;r<e.length;r++)t[n].equals(e[r])&&o.push(t[n]);return o}function compareRouteWithCollection(t,e){if(e.length>1)for(var o=0;o<e.length;o++)if(t.id!==e[o].id){var n=getOverlappingGeometry(t.geometry,e[o].geometry);if(n.length>0){var r=gRoutes.append("path").attr("class","route").attr("d",lineFunction(n)).attr("stroke-width",8);routes_paths.push(r)}}}function setMode(t){d3.selectAll("button.mode").classed("active",!1),currentMode=t,d3.select("."+t).classed("active",!0)}var concaveman=require("concaveman"),platform=new H.service.Platform({app_id:"EOg7UyuSFbPF0IG5ANjz",app_code:"iRnqNl0dyzX_8FOlchD0ZQ"}),router=platform.getRoutingService(),enterpriseRouter=platform.getEnterpriseRoutingService();showValue(),$.fn.d3Click=function(){this.each(function(t,e){var o=new MouseEvent("click");e.dispatchEvent(o)})};var linePadding=15,roadsData;d3.json("../../data/roads_aoi.json",function(t,e){roadsData=e}),d3.json("../../data/places_aoi.json",function(t,e){mapDraw(e)});var routes_points=[],routes_paths=[],lines_paths=[],routes_foot_points=[],routes_foot_paths=[],routing_history=[],pathData,pathFootData,routes_collection=[],gRoutes,lineFunction,currentMode,isoline,isolines_collection=[],isolinesGroup;Array.prototype.equals&&console.warn("Overriding existing Array.prototype.equals. Possible causes: New API defines the method, there's a framework conflict or you've got double inclusions in your code."),Array.prototype.equals=function(t){if(!t)return!1;if(this.length!=t.length)return!1;for(var e=0,o=this.length;o>e;e++)if(this[e]instanceof Array&&t[e]instanceof Array){if(!this[e].equals(t[e]))return!1}else if(this[e]!=t[e])return!1;return!0},Object.defineProperty(Array.prototype,"equals",{enumerable:!1});